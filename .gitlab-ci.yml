image: "alpine:latest"

before_script:
  - apk add --no-cache python3 gcc curl python3-dev musl-dev linux-headers libffi-dev make alpine-sdk openssl-dev
  - python3 -m venv env
  - source ./env/bin/activate
  - pip3 install -r requirements.txt

stages:
  - Unit Tests

Build:
  stage: Unit Tests
  script:
    - source ./env/bin/activate
    # Start Webapp (db should be built on start up)
    - flask run &
    # Test API endpoints
    - sleep 30
    # Add a model
    - |
      curl -sS -X POST --header 'Content-Type: application/json' --header 'Accept:application/json' -d '{
      "OS": "EdgeOS",
      "manufacturer": "Ubiquiti",
      "model": "Edge Router"
      }' 'http://127.0.0.1:5000/model/'
    # View models
    - |
      curl -sS -X GET --header 'Accept: application/json' 'http://127.0.0.1:5000/models'
    # Add a device
    - |
      curl -sS -X POST --header 'Content-Type: application/json' --header 'Accept: application/problem+json' -d '{
      "alias": "API Test",
      "enable": "Enable_String",
      "enabled": true,
      "ip": "192.168.1.1",
      "model": 1,
      "password": "string",
      "port": 22,
      "username": "string"
      }' 'http://127.0.0.1:5000/device'
    # Get Devices
    - |
      curl -sS -X GET --header 'Accept: application/json' 'http://127.0.0.1:5000/devices'
    # Disable Device
    - |
      curl -sS -X PUT --header 'Content-Type: application/json' --header 'Accept: application/json' 'http://127.0.0.1:5000/device/disable/API%20Test'
    # Enable Device
    - |
      curl -sS -X PUT --header 'Content-Type: application/json' --header 'Accept: application/json' 'http://127.0.0.1:5000/device/enable/API%20Test'
    # Get a devices repo
    - |
      curl -sS -X GET --header 'Accept: application/json' 'http://127.0.0.1:5000/repo/device/API%20Test'
    # Create a repo
    - |
      curl -sS -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{
      "repo_name": "API Test"
      }' 'http://127.0.0.1:5000/repo/'
    # Get all repos
    - |
      curl -sS -X GET --header 'Accept: application/json' 'http://127.0.0.1:5000/repos/'
    # Delete first device
    - |
      curl -sS -X DELETE --header 'Accept: application/json' 'http://127.0.0.1:5000/device/API%20Test'
    # Delete first repo
    - |
      curl -sS -X DELETE --header 'Accept: application/json' 'http://127.0.0.1:5000/repo/API%20Test'
    # Delete first model
    - |
      curl -sS -X DELETE --header 'Accept: application/json' 'http://127.0.0.1:5000/model/1'
    # Kill webserver if we made it this far
    - kill %1
