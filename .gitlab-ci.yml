image: "alpine:latest"

before_script:
  - apk add --no-cache python3 gcc curl python3-dev musl-dev linux-headers libffi-dev make alpine-sdk openssl-dev
  - python3 -m venv env
  - source ./env/bin/activate
  - pip3 install -r requirements.txt

stages:
  - Static Analysis
  - Unit Tests

pylint:
  stage: Static Analysis
  allow_failure: true
  script:
  - pip3 install pylint
  - pylint ./*.py
  - pylint ./api/*.py
  - pylint ./device_lib/*.py

flake8:
  stage: Static Analysis
  allow_failure: true
  script:
  - pip3 install flake8
  - flake8 ./*
  - flake8 ./api/*.py
  - flake8 ./device_lib/*.py

Build:
  stage: Unit Tests
  script:
    - source ./env/bin/activate
    # Start Webapp (db should be built on start up)
    - python3 ./web_app.py &
    # Test API Model endpoints
    # Add a model
    - |
      curl -X POST --header 'Content-Type: application/json' --header 'Accept:application/json' -d '{ "OS":"EdgeOS", "manufacturer":"Ubiquiti", "model":"Edge Router" }' 'http://127.0.0.1:5000/model/'
    # View models
    - |
      curl -X GET --header 'Accept: application/json' 'http://127.0.0.1:5000/models'
    # Delete model first added
    - |
      curl -X DELETE --header 'Accept: application/json' 'http://127.0.0.1:5000/model/1'
    # Kill webserver if we made it this far
    - kill %1
